---

- name: Deploy controller VMs for testenv '{{ testenv_name }}' using API directly
  delegate_to: localhost
  shell: |
    '{{ script_path.path }}/provision_vm.py' \
      --host {{ vcenter_hostname }} \
      --user {{ vcenter_user }} \
      --password {{ vcenter_password }} \
      --datacenter {{ datacenter_name }} \
      --template {{ hostvars[inventory_hostname].template }} \
      --folder {{ testenv_folder }} \
      --name {{ inventory_hostname_short }} \
      --mgmt-network {{ portgroup_mgmt }} \
      --data-network {{ portgroup_contrail }} \
      --data-ip-address 172.16.0.1 \
      --data-netmask 255.255.0.0

- name: Wait for Linux customization to finish
  delegate_to: localhost
  wait_for:
    timeout: 180

- name: Get testbed VM facts from VMware
  delegate_to: localhost
  vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_user }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ validate_certs }}"
    datacenter: "{{ datacenter_name }}"
    folder: "{{ datacenter_name }}/vm/{{ testenv_folder }}"
    name: "{{ inventory_hostname_short }}"
  register: newvm

- name: Save VM info to inventory file '{{ vm_inventory_file }}'
  delegate_to: localhost
  lineinfile:
    path: "{{ vm_inventory_file }}"
    create: yes
    line: "{{ inventory_hostname }};{{ newvm.instance.hw_eth0.ipaddresses | ipv4 | join(',') }};{{ newvm.instance.hw_product_uuid }}"
