---

- name: Create template of VM name
  set_fact:
    vm_name_template: "ci-{{ vm_role }}-"

- name: Get highest VM number for {{ vm_name_template }}
  delegate_to: localhost
  register: get_vm_id
  script: >
    get_vm_id.py
    --host '{{ vcenter_hostname }}'
    --user '{{ vcenter_username }}'
    --password '{{ vcenter_password }}'
    --vm-name "{{ vm_name_template }}"

- name: Define slave VM variables
  set_fact:
    slave_vm_annotation: "Template for {{ vm_role }} created on {{ '%Y-%m-%d %H:%M:%S' | strftime(ansible_date_time.epoch) }}"
    slave_vm_folder: "{{ vcenter_datacenter }}/vm/{{ vmware_folder }}"
    slave_vm_name: "{{ vm_name_template }}{{ get_vm_id.stdout.strip() }}"

- name: "Deploy VM from Template: {{ slave_vm_name }}"
  vmware_guest:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    datacenter: "{{ vcenter_datacenter }}"
    cluster: "{{ vcenter_cluster }}"
    folder: "{{ slave_vm_folder }}"
    name: "{{ slave_vm_name }}"
    annotation: "{{ slave_vm_annotation }}"
    template: "{{ vm_template }}"
    hardware: "{{ vm_hardware }}"
    state: poweredon
    customization:
      hostname: "{{ slave_vm_name }}"
      password: "Contrail123!"

    networks: "{{ vm_networks }}"

- name: Wait for VMware tools to come up after cloning base template
  vmware_guest_tools_wait:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    folder: "{{ slave_vm_folder }}"
    name: "{{ slave_vm_name }}"

# NOTE: "Workaround". One way to check if customization has finished is to check hostname through
#       VMware Tools, but vmware_guest_facts does not support this.
#       Need to research it.
- name: Wait for customization to finish (workaround by sleeping)
  wait_for:
    timeout: 900

- name: Wait for correct IP address
  vmware_guest_facts:
    hostname: "{{ vcenter_hostname }}"
    username: "{{ vcenter_username }}"
    password: "{{ vcenter_password }}"
    validate_certs: "{{ vcenter_validate_certs }}"
    datacenter: "{{ vcenter_datacenter }}"
    folder: "{{ slave_vm_folder }}"
    name: "{{ slave_vm_name }}"
  register: vm
  retries: 60
  delay: 15
  until: >
      vm.instance.hw_eth0.ipaddresses | ipv4 | reject("match", "169.254.*") | list

- debug:
    var: vm

- name: Add host to inventory
  add_host:
    name: "{{ slave_vm_name }}"
    ansible_host: "{{ vm.instance.hw_eth0.ipaddresses | ipv4 | first }}"
    groups: "{{ vm_role }}"
